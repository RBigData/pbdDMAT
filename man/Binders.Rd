% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/pbdDMAT-package.R
\docType{methods}
\name{Binders}
\alias{Binders}
\alias{cbind}
\alias{cbind,...-method}
\alias{cbind,ANY-method}
\alias{cbind-method}
\alias{rbind}
\alias{rbind,...-method}
\alias{rbind,ANY-method}
\alias{rbind-method}
\title{Row and Column binds for Distributed Matrices}
\arguments{
\item{...}{vectors, matrices, or distributed matrices.}

\item{ICTXT}{BLACS communicator number for return object.}

\item{deparse.level}{integer controlling the construction of labels in the
case of non-matrix-like arguments. Does nothing for distributed matrices.}
}
\value{
Returns a vector, matrix, or distributed matrix, depending on input.
}
\description{
Row and column binds.
}
\details{
The \code{...} list of arguments can be vectors, matrices, or distributed
matrices so long as non-distributed objects are not used with distributed
objects. This kind of mixing-and-matching will lead to chaos. Currently no
check is performed to prevent the user from this mixing-and-matching for
performance reasons (it is slow enough already).
}
\section{Methods}{
 \describe{ \item{list("signature(... = \"ANY\")")}{an R
object.} }
}
\examples{
\dontrun{
# Save code in a file "demo.r" and run with 2 processors by
# > mpiexec -np 2 Rscript demo.r

library(pbdDMAT, quiet = TRUE)
init.grid()

# don't do this in production code
x <- matrix(1:16, ncol=4)
dx <- as.ddmatrix(x)

y <- rbind(dx, dx)

print(y)

finalize()
}
}
\keyword{Methods}

