% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ddmatrix_redistribute.r
\name{redistribute}
\alias{redistribute}
\alias{reblock}
\title{Distribute/Redistribute matrices across the process grid}
\usage{
reblock(dx, bldim = dx@bldim, ICTXT = .pbd_env$ICTXT)

redistribute(dx, bldim = dx@bldim, ICTXT = .pbd_env$ICTXT)
}
\arguments{
\item{dx}{numeric distributed matrix}

\item{bldim}{the blocking dimension for block-cyclically distributing the
matrix across the process grid.}

\item{ICTXT}{BLACS context number for return.}
}
\value{
Returns a distributed matrix.
}
\description{
Takes either an R matrix and distributes it as a distributed matrix, or
takes a distributed matrix and redistributes it across a (possibly) new
BLACS context, using a (possibly) new blocking dimension.
}
\details{
\code{distribute()} takes an R matrix \code{x} stored on the processes in
some fashion and distributes it across the process grid belonging to
\code{ICTXT}. If a process is to call \code{distribute()} and does not yet
have any ownership of the matrix \code{x}, then that process should store
\code{NULL} for \code{x}.

How one might typically use this is to read in a non-distributed matrix on
the first process, store that result as the R matrix \code{x}, and then have
the other processes store \code{NULL} for \code{x}. Then calling
\code{distribute()} returns the distributed matrix which was distributed
according to the options \code{bldim} and \code{ICTXT}.

Using an \code{ICTXT} value other than zero is not recommended unless you
have a good reason to. Use of other such contexts should only be considered
for advanced users, preferably those with knowledge of ScaLAPACK.

\code{redistribute()} takes a distributed matrix and redistributes it to the
(possibly) new process grid with BLACS context \code{ICTXT} and with the
(possibly) new blocking dimension \code{bldim}. The original BLACS context
is \code{dx@ICTXT} and the original blocking dimension is \code{dx@bldim}.

These two functions are essentially simple wrappers for the ScaLAPACK
function PDGEMR2D, with the above described behavior. Of note, for
\code{distribute()}, \code{dx@ICTXT} and \code{ICTXT} must share at least one
process in common. Likewise for \code{redistribute()} with \code{xCTXT} and
\code{ICTXT}.

Very general redistributions can be done with \code{redistribute()}, but
thinking in these terms is an acquired skill.  For this reason, several
simple interfaces to this function have been written.
}
\keyword{BLACS}
\keyword{Data}
\keyword{Distributing}
